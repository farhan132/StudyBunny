name: Deploy Frontend to S3

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  S3_BUCKET: studybunny-frontend
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Build application
        working-directory: frontend
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_ENV: production
        run: npm run build
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Deploy to S3
        working-directory: frontend
        run: |
          aws s3 sync build/ s3://${{ env.S3_BUCKET }} \
            --delete \
            --acl public-read \
            --cache-control "max-age=31536000,public" \
            --exclude "*.html" \
            --exclude "service-worker.js"
          
          aws s3 sync build/ s3://${{ env.S3_BUCKET }} \
            --exclude "*" \
            --include "*.html" \
            --include "service-worker.js" \
            --acl public-read \
            --cache-control "max-age=0,no-cache,no-store,must-revalidate"
      
      - name: Invalidate CloudFront cache
        if: env.CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
      
      - name: Deployment summary
        run: |
          echo "âœ… Frontend deployed successfully!"
          echo "S3 Bucket: s3://${{ env.S3_BUCKET }}"
          echo "Region: ${{ env.AWS_REGION }}"

